<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.mapper.BoardMapper">
   
   <insert id="insertBoard" parameterType="Board">
      <selectKey keyProperty="num" resultType="_int" order="BEFORE">
         select spring_board_seq.nextval from dual
      </selectKey>
      insert into spring_board(num,userid,passwd,subject,content,wdate,readnum,filename,originFilename,filesize,refer,lev,sunbun)
      values(#{num},#{userid},#{passwd},#{subject},#{content:VARCHAR}, SYSDATE,0,#{filename:VARCHAR},#{originFilename:VARCHAR},
      #{filesize:NUMERIC},#{num},#{lev},#{sunbun})
      <!-- 원본글쓰기 refer(글그룹번호)값이 글번호(num)과 동일하게 insert -->
   </insert>
   
   <!-- 총 게시글 수 가져오기  -->
   <select id="getTotalCount" resultType="_int">
      select count(num) from spring_board
   </select>
   
   
   
   
   	<!-- 게시목록 가져오기  -->
   	  <select id="selectBoardAll" resultType="Board" parameterType="map">
      <!-- [단순형 게시판] -->
      <!-- select * from spring_board order by num desc -->
      
      <!-- [답변형 게시판] -->
      <!-- select * from spring_board order by refer desc, sunbun asc   -->    
      select * from(
	  select row_number() over(order by refer desc, sunbun asc) rn, spring_board.* 
	  from spring_board )
	  <![CDATA[
	  where rn >#{start} and rn <#{end}
	  ]]>  
	  
	  <!-- 부등호 등의 문자가 나올때는 CDATA Section으로 감싸자. CDATA는 Character Data라는
	  의미. CDATA로 감싸진 부분은 xml문서로 파싱하지 않고 문자로 취급한다 -->
	  <!-- where rn &gt; #{start} and rn &lt; #{end} -->
	  <!-- where rn between #{start} and #{end} -->
   </select>
   
   <!-- 글 관련 보기 관련 -->
   <update id="updateReadnum" parameterType="_int">
      update spring_board set readnum=readnum+1 where num=#{value}
   </update>
   
   <select id="selectBoardByIdx" resultType="Board" parameterType="_int">
      select * from spring_board where num=#{value}
   </select>
   
   <delete id ="deleteBoard" parameterType="_int">
      delete from spring_board where num=#{value}
   </delete>
   
   <update id="updateBoard" parameterType="Board">
      update spring_board set userid=#{userid},subject=#{subject},content=#{content:VARCHAR},passwd=#{passwd}
      <if test="filename !=null and filename !=''">
         ,filename=#{filename},filesize=#{filesize},originFilename=#{originFilename} 
      </if>
      <where>
         num=#{num}
      </where>
   </update>
   
   
   <!-- [답변 글쓰기 관련] 1단계 : 부모글의 refer, lev, sunbun 가져오기 -->
   <select id="selectRefLevSunbun" parameterType="_int" resultType="Board">
      select refer,lev,sunbun from spring_board where num=#{value}
   </select>
   
   <!-- [답변글쓰기 관련] 2단계:  기존에 달려있는 답변글이 있다면 답변글들의 순번(sunbun)을 하나씩 증가시켜준다(뒤로 밀어내기)
      왜? 내가 방금 쓴 답변글이 위에 올라오게 하기 위해 ==> update문   -->
   <update id="updateSunbun" parameterType="Board">
   		update spring_board set sunbun=sunbun+1 where refer =#{refer} and sunbun > #{sunbun}
   </update>
   
   <!-- [답변글쓰기 관련] 3단계: 답변글쓰기 insert하기-->
   <insert id="rewriteBoard" parameterType="Board">
      <selectKey keyProperty="num" resultType="_int" order="BEFORE">
         select spring_board_seq.nextval from dual
      </selectKey>
         insert into spring_board(num,userid,passwd,subject,content,wdate,readnum,filename,originFilename,filesize,refer,lev,sunbun)
         values(#{num},#{userid},#{passwd},#{subject},#{content:VARCHAR}, SYSDATE,0,#{filename:VARCHAR},#{originFilename:VARCHAR},
         #{filesize:NUMERIC},#{refer},#{lev},#{sunbun})
         <!-- 답변 글쓰기 refer값이 부모의 refer값과 동일하게 insert
             lev : 부모 lev +1
             sunbun : 부모 sunbun +1
          -->
   </insert>
   
   
</mapper>